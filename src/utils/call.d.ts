// generate by routeparse at 2022-08-13 13:49:16.860448828 +0800 CST m=+0.004720760
export function call(path: "/contest_participants", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest_participants", method: "POST", option: {  body: { contest_id: int; }; }): Promise<any>;
export function call(path: "/contest_participants", method: "DELETE", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/user", method: "GET", option: { param: { user_id: int; };  }): Promise<any>;
export function call(path: "/user", method: "POST", option: {  body: { password: string; remember: string; user_name: string; verify_code: string; verify_id: string; }; }): Promise<any>;
export function call(path: "/user", method: "PUT", option: {  body: { email: string; gender: int; motto: string; new_password: string; organization: string; password: string; user_id: int; }; }): Promise<any>;
export function call(path: "/user", method: "PATCH", option: {  body: { user_group: int; user_id: int; }; }): Promise<any>;
export function call(path: "/permission_users", method: "GET", option: { param: { permission_id: int; };  }): Promise<any>;
export function call(path: "/permission_users", method: "POST", option: {  body: { permission_id: int; user_ids: string; }; }): Promise<any>;
export function call(path: "/permission_users", method: "DELETE", option: { param: { permission_id: int; user_id: int; };  }): Promise<any>;
export function call(path: "/contest_permissions", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest_permissions", method: "POST", option: {  body: { contest_id: int; permission_id: int; }; }): Promise<any>;
export function call(path: "/contest_permissions", method: "DELETE", option: { param: { contest_id: int; permission_id: int; };  }): Promise<any>;
export function call(path: "/contest", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest", method: "POST"): Promise<any>;
export function call(path: "/contest", method: "PATCH", option: {  body: { contest_id: int; last: int; pretest: int; score_private: int; start_time: string; title: string; }; }): Promise<any>;
export function call(path: "/contest_managers", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest_managers", method: "POST", option: {  body: { contest_id: int; user_id: int; }; }): Promise<any>;
export function call(path: "/contest_managers", method: "DELETE", option: { param: { contest_id: int; user_id: int; };  }): Promise<any>;
export function call(path: "/Rejudge", method: "POST", option: {  body: { problem_id: int; submission_id: int; }; }): Promise<any>;
export function call(path: "/permissions", method: "GET", option: { param: { left: int; pagesize: int; right: int; };  }): Promise<any>;
export function call(path: "/permissions", method: "POST", option: {  body: { permission_name: string; }; }): Promise<any>;
export function call(path: "/permissions", method: "PATCH", option: {  body: { permission_id: int; permission_name: string; }; }): Promise<any>;
export function call(path: "/permissions", method: "DELETE", option: { param: { permission_id: int; };  }): Promise<any>;
export function call(path: "/problem_statistic", method: "GET", option: { param: { left: int; left_id: int; mode: string; pagesize: int; problem_id: int; right: int; right_id: int; };  }): Promise<any>;
export function call(path: "/problem_data", method: "GET", option: { param: { contest_id: int; problem_id: int; type: string; };  }): Promise<any>;
export function call(path: "/problem_data", method: "PUT", option: {  body: { data: any; problem_id: int; }; }): Promise<any>;
export function call(path: "/contest_problems", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest_problems", method: "POST", option: {  body: { contest_id: int; problem_id: int; }; }): Promise<any>;
export function call(path: "/contest_problems", method: "DELETE", option: { param: { contest_id: int; problem_id: int; };  }): Promise<any>;
export function call(path: "/users", method: "GET", option: { param: { left: int; left_user_id: int; pagesize: int; right: int; right_user_id: int; user_name: string; };  }): Promise<any>;
export function call(path: "/likes", method: "POST", option: {  body: { id: int; target: string; }; }): Promise<any>;
export function call(path: "/problem_managers", method: "GET", option: { param: { problem_id: int; };  }): Promise<any>;
export function call(path: "/problem_managers", method: "POST", option: {  body: { problem_id: int; user_id: int; }; }): Promise<any>;
export function call(path: "/problem_managers", method: "DELETE", option: { param: { problem_id: int; user_id: int; };  }): Promise<any>;
export function call(path: "/ratings", method: "GET", option: { param: { user_id: int; };  }): Promise<any>;
export function call(path: "/contests", method: "GET", option: { param: { left: int; pagesize: int; right: int; };  }): Promise<any>;
export function call(path: "/contest_standing", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/submissions", method: "GET", option: { param: { contest_id: int; left: int; pagesize: int; problem_id: int; right: int; submitter: int; };  }): Promise<any>;
export function call(path: "/submission", method: "GET", option: { param: { submission_id: int; };  }): Promise<any>;
export function call(path: "/submission", method: "POST", option: {  body: { contest_id: int; problem_id: int; submit_all: string; }; }): Promise<any>;
export function call(path: "/submission", method: "DELETE", option: { param: { submission_id: int; };  }): Promise<any>;
export function call(path: "/GetTime", method: "POST"): Promise<any>;
export function call(path: "/Init", method: "POST"): Promise<any>;
export function call(path: "/UserLogin", method: "POST", option: {  body: { password: string; remember: string; user_name: string; }; }): Promise<any>;
export function call(path: "/custom_test", method: "POST"): Promise<any>;
export function call(path: "/problem_permissions", method: "GET", option: { param: { problem_id: int; };  }): Promise<any>;
export function call(path: "/problem_permissions", method: "POST", option: {  body: { permission_id: int; problem_id: int; }; }): Promise<any>;
export function call(path: "/problem_permissions", method: "DELETE", option: { param: { permission_id: int; problem_id: int; };  }): Promise<any>;
export function call(path: "/FinishContest", method: "POST", option: {  body: { contest_id: int; }; }): Promise<any>;
export function call(path: "/blog", method: "GET", option: { param: { blog_id: int; };  }): Promise<any>;
export function call(path: "/blog", method: "POST", option: {  body: { content: string; private: int; title: string; }; }): Promise<any>;
export function call(path: "/blog", method: "PUT", option: {  body: { blog_id: int; content: string; private: int; title: string; }; }): Promise<any>;
export function call(path: "/blog", method: "DELETE", option: { param: { blog_id: int; };  }): Promise<any>;
export function call(path: "/problems", method: "GET", option: { param: { left: int; pagesize: int; right: int; };  }): Promise<any>;
export function call(path: "/announcements", method: "GET"): Promise<any>;
export function call(path: "/announcements", method: "POST", option: {  body: { blog_id: int; priority: int; }; }): Promise<any>;
export function call(path: "/announcements", method: "DELETE", option: { param: { id: int; };  }): Promise<any>;
export function call(path: "/contest_dashboard", method: "GET", option: { param: { contest_id: int; };  }): Promise<any>;
export function call(path: "/contest_dashboard", method: "POST", option: {  body: { contest_id: int; dashboard: string; }; }): Promise<any>;
export function call(path: "/UserLogout", method: "POST"): Promise<any>;
export function call(path: "/captcha", method: "GET", option: { param: { height: int; id: string; width: int; };  }): Promise<any>;
export function call(path: "/captcha", method: "POST", option: {  body: { length: int; }; }): Promise<any>;
export function call(path: "/captcha", method: "PATCH", option: {  body: { id: string; }; }): Promise<any>;
export function call(path: "/user_permissions", method: "GET", option: { param: { user_id: int; };  }): Promise<any>;
export function call(path: "/blogs", method: "GET", option: { param: { left: int; pagesize: int; right: int; user_id: int; };  }): Promise<any>;
export function call(path: "/blog_comments", method: "GET", option: { param: { blog_id: int; };  }): Promise<any>;
export function call(path: "/blog_comments", method: "POST", option: {  body: { blog_id: int; }; }): Promise<any>;
export function call(path: "/blog_comments", method: "DELETE", option: { param: { comment_id: int; };  }): Promise<any>;
export function call(path: "/problem", method: "GET", option: { param: { contest_id: int; problem_id: int; };  }): Promise<any>;
export function call(path: "/problem", method: "POST"): Promise<any>;
export function call(path: "/problem", method: "PATCH", option: {  body: { allow_down: string; problem_id: int; title: string; }; }): Promise<any>;
